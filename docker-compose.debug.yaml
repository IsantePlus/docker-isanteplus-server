version: '3.8'
services:
  isanteplus:
    container_name: isanteplus-demo
    hostname: isanteplus-demo
    build:
      context: ./
      dockerfile: ./openmrs-server/Dockerfile
      args:
        USERNAME: ${RELEASE_USERNAME}
        TOKEN: ${RELEASE_TOKEN}
        ISANTEPLUS_VERSION: 2.8.0
    restart: unless-stopped
    env_file:
        - ./resources/openmrs-server.env
    ports:
      - "8081:8080"
      - "1044:8000"
    volumes:
      - openmrs-data:/openmrs/data
    networks:
      - isanteplus
    healthcheck:
      test: "curl -sSk http://localhost:8080/openmrs || exit 1"
      interval: 30s
      timeout: 10s
      retries: 3   
    depends_on: 
      mysql:
        condition: service_healthy
    environment:
      USERNAME: ${RELEASE_USERNAME}
      TOKEN: ${RELEASE_TOKEN}
      ISANTEPLUS_VERSION: 2.8.0

  mysql:
    command: mysqld --character-set-server=utf8 --collation-server=utf8_general_ci --sql_mode=""
    image: ghcr.io/isanteplus/isanteplus-db:0.1.0
    restart: unless-stopped
    container_name: isanteplus-mysql
    hostname: isanteplus-mysql
    healthcheck:
      test: "exit 0"
    environment:
      - MYSQL_DATABASE=openmrs
      - MYSQL_ROOT_PASSWORD=debezium
      - MYSQL_USER=mysqluser
      - MYSQL_PASSWORD=mysqlpw
      - MYSQL_ROOT_HOST=%    # Allow docker containers to connect to mysql
    volumes:
      - ./db/mysql.cnf:/etc/mysql/conf.d/custom.cnf  # mysql config preconfigured to allow binlog/debezium
      - mysql-data:/var/lib/mysql
    networks:
      - isanteplus
    ports:
      - 3306:3306
networks:
  isanteplus:
volumes:
  mysql-data:
  openmrs-data:


